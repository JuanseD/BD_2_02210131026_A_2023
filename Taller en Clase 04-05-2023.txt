1. Devuelve un listado con el primer apellido, segundo apellido y el nombre de todos los
alumnos. El listado deberá estar ordenado alfabéticamente de menor a mayor por el primer
apellido, segundo apellido y nombre.

SELECT p.apellido1, p.apellido2, p.nombre  
FROM persona p 
WHERE p.tipo = 'alumno'
ORDER by p.apellido1, p.apellido2, p.nombre DESC;

2. Averigua el nombre y los dos apellidos de los alumnos que no han dado de alta su número de
teléfono en la base de datos.

SELECT p.nombre, p.apellido1, p.apellido2  
FROM persona p 
WHERE p.tipo = 'alumno' AND p.telefono IS NULL;

3. Devuelve el listado de los alumnos que nacieron en 1999.

SELECT *
FROM persona p 
WHERE p.tipo = 'alumno' AND YEAR(p.fecha_nacimiento) = 1999;

4. Devuelve el listado de profesores que no han dado de alta su número de teléfono en la base
de datos y además su nif termina en K.

SELECT *
FROM persona p 
WHERE p.tipo = 'profesor' AND p.telefono IS NULL AND p.nif LIKE '%K';

5. Devuelve el listado de las asignaturas que se imparten en el primer cuatrimestre, en el tercer
curso del grado que tiene el identificador 7.

SELECT *
FROM asignatura a  
WHERE a.cuatrimestre = '1' AND a.curso = '3'AND a.id_grado = '7';

6. Devuelve un listado con los datos de todas las alumnas que se han matriculado alguna vez en
el Grado en Ingeniería Informática (Plan 2015).

SELECT p.*
FROM persona p, grado g 
WHERE p.tipo = 'alumno' AND p.sexo = 'M' AND g.nombre = 'Grado en Ingeniería Informática (Plan 2015)';

7. Devuelve un listado con todas las asignaturas ofertadas en el Grado en Ingeniería Informática
(Plan 2015).

SELECT a.*
FROM asignatura a
WHERE a.id_grado = '4';

8. Devuelve un listado de los profesores junto con el nombre del departamento al que están
vinculados. El listado debe devolver cuatro columnas, primer apellido, segundo apellido,
nombre y nombre del departamento. El resultado estará ordenado alfabéticamente de menor a
mayor por los apellidos y el nombre.

SELECT p.apellido1, p.apellido2, p.nombre, departamento.nombre AS Departamento
FROM persona p
JOIN profesor ON profesor.id_profesor = p.id 
JOIN departamento ON profesor.id_departamento = departamento.id 
ORDER BY p.apellido1, p.apellido2, p.nombre DESC;

9. Devuelve un listado con el nombre de las asignaturas, año de inicio y año de fin del curso
escolar del alumno con nif 26902806M.

SELECT a.nombre, curso_escolar.anyo_inicio, curso_escolar.anyo_fin  
FROM asignatura a
JOIN alumno_se_matricula_asignatura ON alumno_se_matricula_asignatura.id_asignatura = a.id  
JOIN persona ON persona.id = alumno_se_matricula_asignatura.id_alumno 
JOIN curso_escolar ON curso_escolar.id = alumno_se_matricula_asignatura.id_curso_escolar 
WHERE persona.nif = '26902806M'

10. Devuelve un listado con el nombre de todos los departamentos que tienen profesores que
imparten alguna asignatura en el Grado en Ingeniería Informática (Plan 2015).

SELECT d.nombre, persona.apellido1, grado.nombre  
FROM departamento d
JOIN profesor ON profesor.id_departamento = d.id 
JOIN persona ON persona.id = profesor.id_profesor 
JOIN asignatura ON asignatura.id_profesor = profesor.id_profesor 
JOIN grado ON grado.id = asignatura.id_grado 
WHERE grado.nombre = 'Grado en Ingeniería Informática (Plan 2015)'
group by persona.nombre;

11. Devuelve un listado con todos los alumnos que se han matriculado en alguna asignatura
durante el curso escolar 2018/2019.

SELECT p.nombre, p.apellido1, p.apellido2, asignatura.nombre 
FROM persona p 
JOIN alumno_se_matricula_asignatura ON alumno_se_matricula_asignatura.id_alumno = p.id 
JOIN asignatura ON asignatura.id = alumno_se_matricula_asignatura.id_asignatura 
JOIN curso_escolar ON curso_escolar.id = alumno_se_matricula_asignatura.id_curso_escolar 
WHERE YEAR(curso_escolar.anyo_inicio) = '2018' OR YEAR(curso_escolar.anyo_inicio) = '2019'
Group by p.nombre;

12. Devuelve un listado con los nombres de todos los profesores y los departamentos que tienen
vinculados. El listado también debe mostrar aquellos profesores que no tienen ningún
departamento asociado. El listado debe devolver cuatro columnas, nombre del departamento,
primer apellido, segundo apellido y nombre del profesor. El resultado estará ordenado
alfabéticamente de menor a mayor por el nombre del departamento, apellidos y el nombre.

SELECT d.nombre, p.apellido1, p.apellido2, p.nombre
FROM profesor pr
LEFT JOIN departamento d ON pr.id_departamento = d.id
INNER JOIN persona p ON pr.id_profesor = p.id
ORDER BY d.nombre, p.apellido1, p.apellido2, p.nombre;

13. Devuelve un listado con los profesores que no están asociados a un departamento

SELECT p.nombre, p.apellido1, p.apellido2
FROM persona p 
JOIN profesor ON profesor.id_profesor = p.id 
JOIN departamento ON departamento.id = profesor.id_departamento 
WHERE profesor.id_departamento IS NULL;

14. Devuelve un listado con los departamentos que no tienen profesores asociados.

SELECT d.nombre
FROM departamento d
LEFT JOIN profesor p ON d.id = p.id_departamento
WHERE p.id_profesor IS NULL;

15. Devuelve un listado con los profesores que no imparten ninguna asignatura.

SELECT p.*
FROM profesor pr
LEFT JOIN asignatura a ON pr.id_profesor = a.id_profesor
INNER JOIN persona p ON pr.id_profesor = p.id
WHERE a.id IS NULL;

16. Devuelve un listado con las asignaturas que no tienen un profesor asignado.

SELECT a.*
FROM asignatura a
LEFT JOIN profesor p ON a.id_profesor = p.id_profesor
WHERE p.id_profesor IS NULL;

17. Devuelve un listado con todos los departamentos que tienen alguna asignatura que no se haya
impartido en ningún curso escolar. El resultado debe mostrar el nombre del departamento y el
nombre de la asignatura que no se haya impartido nunca.

SELECT d.nombre AS nombre_departamento, a.nombre AS nombre_asignatura
FROM departamento d
INNER JOIN profesor p ON d.id = p.id_departamento
INNER JOIN asignatura a ON p.id_profesor = a.id_profesor
WHERE NOT EXISTS (
    SELECT *
    FROM alumno_se_matricula_asignatura m
    INNER JOIN curso_escolar c ON m.id_curso_escolar = c.id
    WHERE m.id_asignatura = a.id
)
ORDER BY d.nombre, a.nombre;

18. Devuelve el número total de alumnas que hay.

SELECT COUNT(*) as num_alumnas
FROM persona
WHERE tipo = 'alumno' AND sexo = 'M';

19. Calcula cuántos alumnos nacieron en 1999.

SELECT COUNT(*) as num_alumnos
FROM persona
WHERE tipo = 'alumno' AND YEAR(fecha_nacimiento) = 1999;

20. Calcula cuántos profesores hay en cada departamento. El resultado sólo debe mostrar dos
columnas, una con el nombre del departamento y otra con el número de profesores que hay
en ese departamento. El resultado sólo debe incluir los departamentos que tienen profesores
asociados y deberá estar ordenado de mayor a menor por el número de profesores.

SELECT d.nombre, COUNT(p.id_profesor) as num_profesores
FROM departamento d
INNER JOIN profesor p ON d.id = p.id_departamento
GROUP BY d.nombre
HAVING COUNT(p.id_profesor) > 0
ORDER BY num_profesores DESC;

21. Devuelve un listado con todos los departamentos y el número de profesores que hay en cada
uno de ellos. Tenga en cuenta que pueden existir departamentos que no tienen profesores
asociados. Estos departamentos también tienen que aparecer en el listado.

SELECT d.nombre, COUNT(p.id_profesor) as num_profesores
FROM departamento d
LEFT JOIN profesor p ON d.id = p.id_departamento
GROUP BY d.nombre
ORDER BY d.nombre ASC;

22. Devuelve un listado con el nombre de todos los grados existentes en la base de datos y el
número de asignaturas que tiene cada uno. Tenga en cuenta que pueden existir grados que no
tienen asignaturas asociadas. Estos grados también tienen que aparecer en el listado. El
resultado deberá estar ordenado de mayor a menor por el número de asignaturas.

SELECT grado.nombre, COUNT(asignatura.id) as num_asignaturas
FROM grado LEFT JOIN asignatura ON grado.id = asignatura.id_grado
GROUP BY grado.nombre
ORDER BY num_asignaturas DESC;

23. Devuelve un listado con el nombre de todos los grados existentes en la base de datos y el
número de asignaturas que tiene cada uno, de los grados que tengan más de 40 asignaturas
asociadas.

SELECT grado.nombre, COUNT(asignatura.id) as num_asignaturas
FROM grado LEFT JOIN asignatura ON grado.id = asignatura.id_grado
GROUP BY grado.nombre
HAVING COUNT(asignatura.id) > 40;

24. Devuelve un listado que muestre el nombre de los grados y la suma del número total de
créditos que hay para cada tipo de asignatura. El resultado debe tener tres columnas: nombre
del grado, tipo de asignatura y la suma de los créditos de todas las asignaturas que hay de ese
tipo. Ordene el resultado de mayor a menor por el número total de crédidos.

SELECT g.nombre AS grado, a.tipo, SUM(a.creditos) AS total_creditos
FROM grado g
JOIN asignatura a ON g.id = a.id_grado
GROUP BY g.id, a.tipo
HAVING SUM(a.creditos) IS NOT NULL
ORDER BY total_creditos DESC;

25. Devuelve un listado que muestre cuántos alumnos se han matriculado de alguna asignatura en
cada uno de los cursos escolares. El resultado deberá mostrar dos columnas, una columna con
el año de inicio del curso escolar y otra con el número de alumnos matriculados.

SELECT ce.anyo_inicio, COUNT(DISTINCT am.id_alumno) AS num_alumnos
FROM alumno_se_matricula_asignatura am
JOIN curso_escolar ce ON am.id_curso_escolar = ce.id
GROUP BY ce.anyo_inicio
ORDER BY ce.anyo_inicio ASC;

26. Devuelve un listado con el número de asignaturas que imparte cada profesor. El listado debe
tener en cuenta aquellos profesores que no imparten ninguna asignatura. El resultado
mostrará cinco columnas: id, nombre, primer apellido, segundo apellido y número de
asignaturas. El resultado estará ordenado de mayor a menor por el número de asignaturas.

SELECT p.id, p.nombre, p.apellido1, p.apellido2, COUNT(a.id_profesor) AS num_asignaturas
FROM persona p
LEFT JOIN profesor pr ON p.id = pr.id_profesor
LEFT JOIN asignatura a ON pr.id_profesor = a.id_profesor
GROUP BY p.id, p.nombre, p.apellido1, p.apellido2
ORDER BY num_asignaturas DESC;

27. Devuelve todos los datos del alumno más joven.

SELECT * FROM persona ORDER BY fecha_nacimiento ASC LIMIT 1;

28. Devuelve un listado con los profesores que no están asociados a un departamento.

SELECT p.*
FROM persona p
LEFT JOIN profesor pr ON p.id = pr.id_profesor
LEFT JOIN departamento d ON pr.id_departamento = d.id
WHERE pr.id_departamento IS NULL AND p.tipo = 'profesor';

29. Devuelve un listado con los departamentos que no tienen profesores asociados.

SELECT d.*
FROM departamento d
WHERE NOT EXISTS (
    SELECT * 
    FROM profesor 
    WHERE profesor.id_departamento = d.id
);

30. Devuelve un listado con los profesores que tienen un departamento asociado y que no
imparten ninguna asignatura.

SELECT persona.*
FROM persona
INNER JOIN profesor ON persona.id = profesor.id_profesor
INNER JOIN departamento ON profesor.id_departamento = departamento.id
WHERE departamento.id IS NOT NULL
AND persona.id NOT IN (
    SELECT DISTINCT id_profesor
    FROM asignatura
    WHERE id_profesor IS NOT NULL
);

31. Devuelve un listado con las asignaturas que no tienen un profesor asignado.

SELECT asignatura.*
FROM asignatura
LEFT JOIN profesor ON asignatura.id_profesor = profesor.id_profesor 
WHERE profesor.id_profesor IS NULL;

32. Devuelve un listado con todos los departamentos que no han impartido asignaturas en ningún
curso escolar.

SELECT departamento.*
FROM departamento
WHERE departamento.nombre NOT IN (
    SELECT DISTINCT departamento.nombre
    FROM departamento
    LEFT JOIN profesor ON departamento.id = profesor.id_departamento
    LEFT JOIN asignatura ON profesor.id_profesor = asignatura.id_profesor
    LEFT JOIN alumno_se_matricula_asignatura ON asignatura.id = alumno_se_matricula_asignatura.id_asignatura
    LEFT JOIN curso_escolar ON alumno_se_matricula_asignatura.id_curso_escolar = curso_escolar.id
    WHERE curso_escolar.id IS NOT NULL
);
